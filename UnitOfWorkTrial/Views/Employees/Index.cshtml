@using UnitOfWorkTrial.Enums
@using UnitOfWorkTrial.Models.ViewModels
@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor HttpContextAccessor
@model EmployeeViewModel

@{
    ViewData["Title"] = "Index";
    var appliedFiltersJson = Newtonsoft.Json.JsonConvert.SerializeObject(Model.AppliedFilters);
}

@Html.Hidden("appliedFiltersJson", appliedFiltersJson)


<div class="hstack gap-3 align-items float-end">
    <span>Welcome @ViewBag.Session</span>
    <span>
        <b>Name:</b> @HttpContextAccessor?.HttpContext?.Request.Cookies["Name"]
        <br />
    </span>
    <form asp-controller="Users" asp-action="Logout">
        <button type="submit" class="btn btn-danger position-relative">Logout</button>
    </form>
</div>
<br />

<div class="container d-flex justify-content-center align-items-center">
    <div class="row">
        <div class="col text-center">
            <h1>Employee Database</h1>
        </div>
    </div>
</div>

<div class="hstack gap-3">
    @* Modal Button *@
    <div>
        <button type="button" class="btn btn-secondary filter-button" data-toggle="modal" data-target="#Filter-Container">
            Filter Employees
        </button>
    </div>

    @* Modal *@

    <div class="modal fade" id="Filter-Container" ; tabindex="-1" role="dialog" aria-labelledby="Filter-ContainerLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="Filter-ContainerLabel">Filter Employees</h5>
                    <button type="button" class="close border" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form asp-asp-controller="Employees" asp-action="Index" method="get">
                        <div class="hstack gap-4">
                            <div class="btn-group">
                                <input class="form-control me-auto" type="text" name="searchText" value="@ViewBag.SearchText" placeholder="Search Employee" />
                            </div>
                            <div>
                                <select class="form-control" id="Department" name="DepId" multiple>
                                    @foreach (var dep in ((SelectList)ViewData["DepartmentId"]).Items)
                                    {
                                        string str = @ViewBag.ArrayString;
                                        var cast = (Department)dep;
                                        if (str.Split(',').Contains(cast.DepartmentId.ToString()))
                                        {
                                            <option class="z-index-100 position-relative" value="@cast.DepartmentId" selected>@cast.Name</option>
                                        }
                                        else
                                        {
                                            <option value="@cast.DepartmentId">@cast.Name</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                        <br />
                        <div class="modal-footer justify-content-center">
                            <input class="btn btn-outline-primary" type="submit" value="Search" />
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>



    <div class="vstack gap-3" align="right">
        <form asp-action="Create">
            <button type="submit" class="btn btn-dark position-relative">Add New Employee</button>
        </form>
    </div>
    <div align="right">
        <form asp-controller="Departments" asp-action="DepIndex">
            <button type="submit" class="btn btn-info position-relative">Add New Department</button>
        </form>
    </div>
</div>

<div><br /></div>


<div class="hstack gap-1">
    @foreach (var filter in Model.AppliedFilters)
    {
        <div class="hstack bubble">
            <button class="bubble-text">@filter</button>
            <button type="button" class="bubble-remove" aria-label="Close" onclick="RemoveBubble('@filter');">&times;</button>
        </div>
    }
</div>
<br />

<partial name="_EmployeeList" />

@*  @Html.Partial("_EmployeeList", Model)
 *@


<partial name="_Pagination" />


<script>
    $(Document).ready(function () {
        $('#Department').select2({
            placeholder: 'Select Departments',
            allowClear: true,
            tags: true // With this, you can add data that are not in the select options
        });
    });

</script>

<script>
    function SetDepartment(Page, SearchText) {
        // debugger
        var path = "/Employees/Index?Page=" + Page;
        if (SearchText != null && SearchText != '') {
            path += "&SearchText=" + SearchText;
        }

        var a = [@ViewBag.ArrayString];

        if (a.length > 0) {
            debugger
            $.each(a, function (index, value) {
                path += "&DepId=" + value;
            })
        }
        var hostname = window.location.origin;
        window.location.href = hostname + path;
    };
</script>


<script>
    // debugger
    $(document).on('click', '.filter-button', function () {
        $('#Filter-Container').modal('show');
    });
</script>

<script>
    $(document).on('click', '.select2-selection', function () {
        $('#Filter-Container').css('z-index', '0')
    });
</script>

@* <script>
    $(document).on('click', '.select2-container', function () {
        $('#Filter-Container').css('z-index', '0')
    });
</script> *@


<script>
    $(document).ready(function () {
        $(document).hover(function (event) {
            // Check if the clicked element is not within #Filter-Container
            if (!$(event.target).closest('#Filter-Container').length) {
                $('#Filter-Container').css('z-index', '1055');
            }
        });

        $(document).on('click', '.select2-selection', function () {
            $('#Filter-Container').css('z-index', '0');
        });
    });
</script>



<script>
    function RemoveBubble(filter) {
        debugger
        $(event.target).closest('.bubble').remove();
        var url = window.location.href;
        var urlParts = url.split('?');
        var baseUrl = urlParts[0];
        var searchParams = new URLSearchParams(urlParts[1]);

        var depIds = searchParams.getAll('DepId');
        if (depIds) {
            depIds = depIds.filter(depId => depId !== filter);
            searchParams.delete('DepId');
        }

        var searchText = searchParams.get('searchText');
        if (searchText && searchText.includes(filter)) {
            searchText = searchText.replace(filter, '').replace('&&', '&').replace('?&', '?');
            if (searchText === '') {
                searchParams.delete('searchText');
            } else {
                searchParams.set('searchText', searchText);
            }
        }

        // Construct the new URL
        var newUrl = baseUrl + '?' + searchParams.toString();

        // Redirect to the updated URL
        window.location.href = newUrl;
    }
</script>
